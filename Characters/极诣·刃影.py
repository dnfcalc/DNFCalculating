from PublicReference.base import *

极诣·刃影等级 = 100 + 5

class 技能0(主动技能):
    名称 = '双重斩'
    所在等级 = 1
    等级上限 = 60
    学习间隔 = 2
    等级精通 = 50
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    基础 = 659.24 *2
    成长 = 6.75910912 *2
    CD = 4
    TP成长 = 0.08
    TP上限 = 5


class 技能1(主动技能):
    名称 = '鬼缚钉'
    备注 = '(TP为基础精通)'
    所在等级 = 5
    等级上限 = 1
    等级精通 = 1
    基础等级 = 1
    # 与基础精通关联 后续测试
    基础 = 431 + 1005.98
    成长 = 0
    CD = 7
    TP成长 = 0.10
    TP上限 = 3

class 技能2(被动技能):
    名称 = '孤勇之志'
    所在等级 = 20
    等级上限 = 20
    基础等级 = 10

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.14 + 0.02 * self.等级, 5)
    
    #实际进图未显示
    #def 独立攻击力倍率进图(self, 武器类型):
    #    return self.加成倍率(武器类型)


class 技能3(主动技能):
    名称 = '冲击斩'
    所在等级 = 10
    等级上限 = 60
    学习间隔 = 2
    等级精通 = 50
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    基础 = 2357.721674
    成长 = 266.2974651
    CD = 5
    TP成长 = 0.08
    TP上限 = 5


class 技能4(主动技能):
    名称 = '回旋勾斩'
    所在等级 = 15
    等级上限 = 60
    学习间隔 = 2
    等级精通 = 50
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    基础 = 965.8692185 + 2389.265284
    成长 = 109.1547049 + 269.7777778
    CD = 8
    TP成长 = 0.08
    TP上限 = 5
class 技能5(主动技能):
    名称 = '封喉丝'
    所在等级 = 20
    等级上限 = 60
    学习间隔 = 2
    等级精通 = 50
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    # 基础 = 801.4126225 + 4009.318751 + 5128.008658
    # 成长 = 90.54910002 + 452.690818 + 578.9769879
    # 无法抓取
    基础 = 5128.0164
    成长 = 578.9769879
    CD = 8
    TP成长 = 0.10
    TP上限 = 5



class 技能6(主动技能):
    名称 = '利刃旋风'
    所在等级 = 25
    等级上限 = 60
    学习间隔 = 2
    等级精通 = 50
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    基础 = 772.7248804 + 1132.980861 + 371.9449761*5
    成长 = 87.27511962 + 127.9760766+ 42.02631579*5
    CD = 6
    TP成长 = 0.10
    TP上限 = 5


class 技能7(主动技能):
    名称 = '白牙落斩'
    所在等级 = 25
    等级上限 = 60
    学习间隔 = 2
    等级精通 = 50
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    基础 = 5574.569378
    成长 = 629.4497608
    CD = 10
    TP成长 = 0.10
    TP上限 = 5


class 技能8(主动技能):
    名称 = '疾风之影'
    所在等级 = 30
    等级上限 = 60
    学习间隔 = 2
    等级精通 = 50
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    基础 = 4862.907022
    成长 = 549.0547006
    CD = 8
    TP成长 = 0.10
    TP上限 = 5


class 技能9(主动技能):
    名称 = '薄暮利刃'
    所在等级 = 30
    等级上限 = 60
    学习间隔 = 2
    等级精通 = 50
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    基础 = 5674.294582
    成长 = 640.7293418
    CD = 10
    TP成长 = 0.10
    TP上限 = 5



class 技能10(主动技能):
    名称 = '黑夜之花'
    所在等级 = 35
    等级上限 = 60
    学习间隔 = 2
    等级精通 = 50
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    基础 = 1324.369105 + 620.8339029*5 + 4438.772386
    成长 = 149.6021873 + 70.17088175*5 + 501.2276145
    CD = 15
    TP成长 = 0.10
    TP上限 = 5


class 技能11(主动技能):
    名称 = '回旋十字斩'
    所在等级 = 35
    等级上限 = 60
    学习间隔 = 2
    等级精通 = 60
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    基础 = 1035.089542/1.5
    成长 = 116.8721805/1.5
    攻击次数 = 5
    基础2 = 8745.892003/1.5
    成长2 = 987.6008202/1.5
    攻击次数2 = 1
    CD = 18
    TP成长 = 0.10
    TP上限 = 5
    是否有护石 = 1
    是否装备护石 = 0

    护石选项 = ['圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.攻击次数 *= 3.51
            self.攻击次数2 *= 2.21
            self.是否装备护石 = 1

class 技能12(被动技能):
    名称 = '刃之决意'
    所在等级 = 35
    等级上限 = 60
    基础等级 = 10

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1 + 0.02 * self.等级, 5)


class 技能13(主动技能):
    名称 = '夜之风'
    所在等级 = 40
    等级上限 = 60
    学习间隔 = 2
    等级精通 = 50
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    基础 = 5623.020335/1.5
    成长 = 634.9700957/1.5
    攻击次数 = 3
    CD = 20
    是否有护石 = 1
    TP成长 = 0.10
    TP上限 = 5

    护石选项 = ['圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.倍率 *= 4.05
            self.攻击次数 = 1


class 技能14(主动技能):
    名称 = '秘术·心斩'
    所在等级 = 45
    等级上限 = 60
    学习间隔 = 2
    等级精通 = 50
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    基础 = 34147.01343/1.5
    成长 = 3717.48418/1.5
    CD = 40
    TP成长 = 0.1
    TP上限 = 5
    是否有护石 = 1

    护石选项 = ['圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.倍率 *= 1.30
            self.CD *= 0.9


class 技能15(被动技能):
    名称 = '收刀秘术'
    所在等级 = 48
    等级上限 = 40
    学习间隔 = 3
    等级精通 = 30
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔 + 1), 等级精通)

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.03 + 0.015 * self.等级, 5)

class 技能16(主动技能):
    名称 = '沉寂之狱'
    所在等级 = 50
    等级上限 = 40
    学习间隔 = 5
    等级精通 = 30
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    基础 = 17175.407 + 36398.086
    成长 = 5182.9665 + 10988.995
    CD = 145
    攻击倍率 = 1.1

class 技能17(主动技能):
    名称 = '瞬影碎魂击'
    所在等级 = 60
    等级上限 = 40
    学习间隔 = 2
    等级精通 = 30
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    基础 = 5573.170944/1.5 + 2609.408438*3/1.5 + 13046.79426/1.5
    成长 = 629.3170944/1.5 + 294.6107003*3/1.5 + 1473.205742/1.5
    CD = 25
    TP成长 = 0.1
    TP上限 = 5
    是否有护石 = 1

    护石选项 = ['圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.倍率 *= 1.24
            self.CD *= 0.8


class 技能18(主动技能):
    名称 = '追命索魂丝'
    所在等级 = 70
    等级上限 = 40
    学习间隔 = 2
    等级精通 = 30
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    基础 = 37476.13847/1.5 + 16060.55728/1.5
    成长 = 4231.32564/1.5 + 1813.414016/1.5
    CD = 50
    TP成长 = 0.1
    TP上限 = 5
    是否有护石 = 1

    护石选项 = ['圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.倍率 *= 1.27


class 技能19(被动技能):
    名称 = '无情夜行'
    所在等级 = 75
    等级上限 = 40
    学习间隔 = 3
    等级精通 = 30
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔 + 1), 等级精通)

    冷却关联技能 = ['所有']
    非冷却关联技能 = ['沉寂之狱','黑曜真刃·破晓','秘术·雨夜终曲']

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.22 + 0.02 * self.等级, 5)

    def CD缩减倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return 0.9

class 技能20(主动技能):
    名称 = '秘术·曜夜斩'
    所在等级 = 75
    等级上限 = 40
    学习间隔 = 2
    等级精通 = 30
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    基础 = 55081.88836
    成长 = 6219.068581
    CD = 40
    是否有护石 = 1
    是否装备护石 = 0

    护石选项 = ['圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.倍率 *= 1.34
            self.是否装备护石 = 1



class 技能21(主动技能):
    名称 = '悬丝风暴'
    所在等级 = 80
    等级上限 = 40
    学习间隔 = 2
    等级精通 = 30
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔), 等级精通) + 1
    基础 = 7593.668262 + 11389.89633 + 20967.60766 + 2181.706539*14
    成长 = 857.3365231 + 1286.08453 + 2367.416268 + 246.3317384*14
    CD = 50
    是否有护石 = 1

    护石选项 = ['圣痕']

    def 装备护石(self, x):
        if x == 0:
            self.倍率 *= 1.34


class 技能22(主动技能):
    名称 = '黑曜真刃·破晓'
    所在等级 = 85
    等级上限 = 40
    学习间隔 = 5
    等级精通 = 30
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    基础 = 45028.23
    成长 = 13591.962
    攻击次数 = 3
    CD = 180

class 技能23(被动技能):
    名称 = '夜色杀意'
    所在等级 = 95
    等级上限 = 40
    学习间隔 = 3
    等级精通 = 30
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔 + 1), 等级精通)

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(1.18 + 0.02 * self.等级, 5)


class 技能24(主动技能):
    名称 = '绚烂之舞'
    所在等级 = 95
    等级上限 = 40
    学习间隔 = 2
    等级精通 = 30
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    基础 = 11663.94258 + 4081.952153*10 + 17495.4067 + 46657.16746
    成长 = 1317.014354 + 461.0143541*10 + 1975.598086 + 5267.808612
    CD = 60.0

class 技能25(主动技能):
    名称 = '秘术·雨夜终曲'
    所在等级 = 100
    等级上限 = 40
    学习间隔 = 5
    等级精通 = 30
    基础等级 = min(int((极诣·刃影等级 - 所在等级) / 学习间隔 + 1), 等级精通)
    # 对白牙
    基础 = 35782.96651 + 89457.89474 + 232587.0813
    成长 = 10802.00957 + 27005.07177 + 70215.98086
    攻击次数 = 1
    CD = 290.0

    def 加成倍率(self, 武器类型):
        return 0.0

class 技能26(被动技能):
    名称 = '基础精通'
    倍率 = 1.0
    所在等级 = 1
    等级上限 = 200
    基础等级 = 100
    关联技能 = ['鬼缚钉']

    def 加成倍率(self, 武器类型):
        if self.等级 == 0:
            return 1.0
        else:
            return round(self.倍率 * (0.463 + 0.089 * self.等级), 5)

技能列表 = []
i = 0
while i >= 0:
    try:
        exec('技能列表.append(技能' + str(i) + '())')
        i += 1
    except:
        i = -1

技能序号 = dict()
for i in range(len(技能列表)):
    技能序号[技能列表[i].名称] = i

技能一觉序号 = 0
技能二觉序号 = 0
技能三觉序号 = 0
for i in 技能列表:
    if i.所在等级 == 50:
        技能一觉序号 = 技能序号[i.名称]
    if i.所在等级 == 85:
        技能二觉序号 = 技能序号[i.名称]
    if i.所在等级 == 100:
        技能三觉序号 = 技能序号[i.名称]

技能护石选项 = ['无']
for i in 技能列表:
    if i.是否有伤害 == 1 and i.是否有护石 == 1:
        技能护石选项.append(i.名称)

极诣·刃影符文选项 = ['无', '回旋勾斩', '封喉丝', '利刃旋风', '白牙落斩','疾刃之影', '薄暮利刃', '黑夜之花', '回旋十字斩', '夜之风', '秘术·心斩', '瞬影碎魂击', '追命索魂丝', '秘术·曜夜斩', '悬丝风暴']


class 极诣·刃影角色属性(角色属性):
    实际名称 = '极诣·刃影'
    角色 = '鬼剑士(女)'
    职业 = '刃影'

    武器选项 = ['太刀']

    类型选择 = ['物理固伤']

    类型 = '物理固伤'
    防具类型 = '皮甲'
    防具精通属性 = ['力量']

    主BUFF = 2

    回旋十字斩形态开关 = 0
    秘术曜夜斩收刀 = 0

    def __init__(self):
        基础属性输入(self)
        self.技能栏 = deepcopy(技能列表)
        self.技能序号 = deepcopy(技能序号)

    def 被动倍率计算(self):
        super().被动倍率计算()
        if self.技能栏[self.技能序号['回旋十字斩']].是否装备护石 == 1:
            if self.回旋十字斩形态开关 == 0:
                self.技能栏[self.技能序号['回旋十字斩']].攻击次数2 = 0
            else:
                self.技能栏[self.技能序号['回旋十字斩']].攻击次数 = 0
        if self.技能栏[self.技能序号['秘术·曜夜斩']].是否装备护石 == 1 and self.秘术曜夜斩收刀 == 1:
            self.技能栏[self.技能序号['秘术·曜夜斩']].倍率 *= 1.05
        


class 极诣·刃影(角色窗口):
    def 窗口属性输入(self):
        self.初始属性 = 极诣·刃影角色属性()
        self.角色属性A = 极诣·刃影角色属性()
        self.角色属性B = 极诣·刃影角色属性()
        self.一觉序号 = 技能一觉序号
        self.二觉序号 = 技能二觉序号
        self.三觉序号 = 技能三觉序号
        self.护石选项 = deepcopy(技能护石选项)
        self.符文选项 = deepcopy(极诣·刃影符文选项)

    def 界面(self):

        super().界面()
        self.回旋十字斩形态开关 = QCheckBox('回旋十字斩空中施放', self.main_frame2)
        self.回旋十字斩形态开关.resize(150, 20)
        self.回旋十字斩形态开关.move(319, 360)
        self.回旋十字斩形态开关.setStyleSheet(复选框样式)
        self.回旋十字斩形态开关.setChecked(False)

        self.职业存档.append(('回旋十字斩形态开关', self.回旋十字斩形态开关, 0))

        self.秘术曜夜斩收刀 = QCheckBox('秘术·曜夜斩收刀', self.main_frame2)
        self.秘术曜夜斩收刀.resize(150, 20)
        self.秘术曜夜斩收刀.move(319, 380)
        self.秘术曜夜斩收刀.setStyleSheet(复选框样式)
        self.秘术曜夜斩收刀.setChecked(False)

        self.职业存档.append(('秘术·曜夜斩收刀', self.秘术曜夜斩收刀, 0))



    def 输入属性(self, 属性, x=0):
        super().输入属性(属性, x)
        if self.回旋十字斩形态开关.isChecked():
            属性.回旋十字斩形态开关 = 1
        if self.秘术曜夜斩收刀.isChecked():
            属性.秘术曜夜斩收刀 = 1